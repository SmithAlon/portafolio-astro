---
import {getCollection, type CollectionEntry} from 'astro:content';

const techs = await getCollection('techs');
---

<section class="techs flex flex-col items-center justify-center min-h-screen">
  <h2 class="font-semibold text-2xl text-center mb-5"><span class="bg-[#E6BC81]/70 px-1">Tech Stack</span></h2>
  <div class="grid grid-cols-3 gap-2 sm:gap-3 max-w-[600px] mx-auto border-2 border-black bg-white/30 rounded-md p-2">
    {techs.map((tech) => (
      <div class="elemento p-1 sm:p-2 text-center hover:scale-110 transition-transform">
        <img 
          src={`${tech.data.imagen}`} 
          alt={tech.data.nombre}
          class="w-8 h-8 sm:w-10 sm:h-10 mx-auto"
        />
        <p class="text-xs sm:text-sm font-medium">{tech.data.nombre}</p>
      </div>
    ))}
  </div>
</section>

<script>
    import { gsap } from 'gsap'
    import { ScrollTrigger } from 'gsap/ScrollTrigger'

    gsap.registerPlugin(ScrollTrigger)

    gsap.from('.techs', {
        autoAlpha: 0,
        scale: 0.8,
        scrollTrigger: {
            trigger: '.techs',
            start: 'top center+=100',
            end: 'center center',
            scrub: 1,
            // markers: true, // uncomment to debug
            toggleActions: 'play none none reverse'
        }
    });

    const tl = gsap.timeline({repeat: -1, repeatDelay: 0.5});

    tl.to(".elemento", {
      duration: 1,
      scale: 0.9,
      yoyo: true,
      repeat: 1,
      ease: "power1.inOut",
      stagger: {
        amount: 1, // tiempo total que tardará en animar todos los elementos
        from: "random", // comienza desde un elemento aleatorio
        grid: [3, 3] // ajusta esto según tu grid (columnas, filas)
      }
    })
</script>