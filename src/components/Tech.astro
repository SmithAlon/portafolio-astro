---
import {getCollection, type CollectionEntry} from 'astro:content';

const techs = await getCollection('techs');
---

<section class="techs flex flex-col items-center justify-center min-h-screen">
  <h2 class="font-semibold text-2xl text-center mb-5"><span class="bg-[#E6BC81]/70 px-1">Tech Stack</span></h2>
  <div class="grid grid-cols-3 gap-2 sm:gap-3 max-w-[600px] mx-auto border-2 border-black bg-white/30 rounded-md p-2">
    {techs.map((tech) => (
      <div class="elemento p-1 sm:p-2 text-center hover:scale-110 transition-transform">
        <img 
          src={`${tech.data.imagen}`} 
          alt={tech.data.nombre}
          class="w-8 h-8 sm:w-10 sm:h-10 mx-auto"
        />
        <p class="text-xs sm:text-sm font-medium">{tech.data.nombre}</p>
      </div>
    ))}
  </div>
</section>

<script>
    import { gsap } from 'gsap'
    import { ScrollTrigger } from 'gsap/ScrollTrigger'

    gsap.registerPlugin(ScrollTrigger)

    // Funci贸n para detectar dispositivo m贸vil
    const isMobile = () => {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
        || window.innerWidth < 768;
    }

    document.addEventListener('DOMContentLoaded', () => {
        // Entrada de la secci贸n solo en desktop
        if (!isMobile()) {
            gsap.from('.techs', {
                autoAlpha: 0,
                scale: 0.8,
                duration: 1,
                scrollTrigger: {
                    trigger: '.techs',
                    start: 'top center+=100',
                    end: 'bottom center',
                    toggleActions: 'play none none reverse',
                    once: true
                }
            });
        }

        // Animaci贸n pulsante (se mantiene en todos los dispositivos)
        const elementos = gsap.utils.toArray('.elemento');
        
        const tl = gsap.timeline({
            repeat: -1, 
            repeatDelay: 1,
            defaults: {
                duration: 0.5,
                ease: "power1.inOut"
            }
        });

        tl.to(elementos, {
            scale: 0.9,
            stagger: {
                amount: 0.5,
                from: "random",
                grid: "auto",
            }
        })
        .to(elementos, {
            scale: 1,
            stagger: {
                amount: 0.5,
                from: "random",
                grid: "auto",
            }
        });
    });
</script>